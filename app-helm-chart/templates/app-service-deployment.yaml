apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-app-service-config-{{ .Values.versions.stable.versionLabel }}
  labels:
    app: {{ .Release.Name }}-app-service
    version: {{ .Values.versions.stable.versionLabel }}
data:
  # Model service URL as it can't be resolved in values.yaml
  MODEL_SERVICE_URL: {{ printf "http://%s-%s:%s" $.Release.Name $.Values.modelService.dnsName ($.Values.modelService.port | toString) | quote }}
  {{- range $key, $val := .Values.appService.stable.config }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app-service-deployment-{{ .Values.versions.stable.versionLabel }}
  labels:
    app: {{ .Release.Name }}-app-service
    version: {{ .Values.versions.stable.versionLabel }}
spec:
  replicas: {{ .Values.appService.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app-service
      version: {{ .Values.versions.stable.versionLabel }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app-service
        version: {{ .Values.versions.stable.versionLabel }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-app-service
          image: "{{ .Values.appService.image.repository }}:{{ .Values.appService.stable.image.tag }}"
          imagePullPolicy: {{ .Values.appService.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.appService.port }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-app-service-config-{{ .Values.versions.stable.versionLabel }}
          env:
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secret
                  key: API_KEY
---
{{- if and .Values.appService.canary.enabled .Values.versions.canary.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-app-service-config-{{ .Values.versions.canary.versionLabel }}
  labels:
    app: {{ .Release.Name }}-app-service
    version: {{ .Values.versions.canary.versionLabel }}
data:
  # Model service URL as it can't be resolved in values.yaml
  MODEL_SERVICE_URL: {{ printf "http://%s-%s:%s" $.Release.Name $.Values.modelService.dnsName ($.Values.modelService.port | toString) | quote }}
  {{- range $key, $val := .Values.appService.canary.config }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app-service-deployment-{{ .Values.versions.canary.versionLabel }}
  labels:
    app: {{ .Release.Name }}-app-service
    version: {{ .Values.versions.canary.versionLabel }}
spec:
  replicas: {{ .Values.appService.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app-service
      version: {{ .Values.versions.canary.versionLabel }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app-service
        version: {{ .Values.versions.canary.versionLabel }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Release.Name }}-app-service
          image: "{{ .Values.appService.image.repository }}:{{ .Values.appService.canary.image.tag }}"
          imagePullPolicy: {{ .Values.appService.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.appService.port }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-app-service-config-{{ .Values.versions.canary.versionLabel }}
          env:
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secret
                  key: API_KEY
{{- end}}