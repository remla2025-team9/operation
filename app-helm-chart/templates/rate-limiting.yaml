apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Release.Name }}-rate-limit-filter
  namespace: istio-system 
spec:
  workloadSelector:
    labels:
      istio: ingressgateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          stat_prefix: http_local_rate_limiter
          # Rate at 10 requests per minute
          token_bucket:
            max_tokens: 10 # Maximum number of tokens in the bucket
            tokens_per_fill: 10 # Number of tokens to add per fill interval
            fill_interval: 60s  # Interval at which tokens are added
          # Check 100% of requests
          filter_enabled: 
            default_value:
              numerator: 100
              denominator: HUNDRED
          # Enforce rate limiting on 100% of requests
          filter_enforced:
            default_value:
              numerator: 100
              denominator: HUNDRED
          # Response headers to add when rate limit is exceeded
          response_headers_to_add:
            - append: false
              header:
                key: x-local-rate-limit
                value: 'true'
          status:
            code: 429