# model-service settings
modelService:
  # This setting is used to set the DNS name for the model service as required by the assignment.
  dns-name: model-service
  replicas: 1
  stable:
    versionLabel: stable
    image:
      tag: latest
    config:
      MODEL_VERSION: "v0.0.3-pre.0"
      SERVICE_PORT: "5001"
      SERVICE_HOST: "0.0.0.0"
  canary:
    enabled: true
    versionLabel: canary
    image:
      tag: canary
    config:
      MODEL_VERSION: "v0.0.3-pre.0"
      SERVICE_PORT: "5001"
      SERVICE_HOST: "0.0.0.0"
  image:
    repository: ghcr.io/remla2025-team9/model-service
    pullPolicy: Always
  port: 5001
  persistence:
    size: 1Gi

# app-service settings
appService:
  replicas: 1
  stable:
    versionLabel: "stable"
    host: "app-service.k8s.local"
    image:
      tag: latest
    config:
      MODEL_SERVICE_URL: "http://{{ .Release.Name }}-{{ .Values.modelService.dns-name }}:5001"
      FLASK_ENV: "production"
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_RUN_PORT: "5000"
      APP_VERSION_LABEL: "stable" # Label used by Prometheus to identify the version
  canary:
    enabled: true
    versionLabel: "canary"
    host: "canary.app-service.k8s.local"
    image:
      tag: canary
    config:
      MODEL_SERVICE_URL: "http://{{ .Release.Name }}-{{ .Values.modelService.dns-name }}:5001"
      FLASK_ENV: "production"
      FLASK_RUN_HOST: "0.0.0.0"
      FLASK_RUN_PORT: "5000"
      APP_VERSION_LABEL: "canary" # Label used by Prometheus to identify the version
  image:
    repository: ghcr.io/remla2025-team9/app-service
    pullPolicy: Always
  port: 5000
  service:
    port: 80

# app-frontend settings
appFrontend:
  replicas: 1
  stable:
    versionLabel: "stable"
    # The destinationWeight is used to control the traffic split between stable and canary versions.
    destinationWeight: 10
    image:
      tag: latest
    config:
      APP_SERVICE_URL: "http://app-service.k8s.local"
  canary:
    enabled: true
    # The destinationWeight is used to control the traffic split between stable and canary versions.
    destinationWeight: 90
    versionLabel: "canary"
    image:
      tag: canary
    config:
      APP_SERVICE_URL: "http://canary.app-service.k8s.local"
  image:
    repository: ghcr.io/remla2025-team9/app-frontend
    pullPolicy: Always
  port: 3000 # Internal port the container listens on
  service:
    port: 80 # Service port for Ingress to target
  ingress:
    host: "app-frontend.k8s.local"

appSecret:
  enabled: true
  apiKey: "top_secret_message_of_team_9"

# grafana settings
grafana:
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboardsConfigMaps:
    default: "grafana-dashboards"

kube-prometheus-stack:
  prometheusOperator:
    admissionWebhooks:
      enabled: false
      createSecret:
        enabled: false
        annotations:
          sidecar.istio.io/inject: "false"
      patch:
        enabled: false
        annotations:
          sidecar.istio.io/inject: "false"
    tls:
      enabled: false
