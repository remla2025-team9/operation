---
- hosts: all
  become: yes
  gather_facts: no
  
  vars:
    ssh_key_pattern: "{{ playbook_dir }}/../ssh/*.pub"

  tasks:
    - name: Ensure vagrant user exists
      user:
        name: vagrant
        state: present
        shell: /bin/bash

    - name: Ensure .ssh directory exists
      file:
        path: /home/vagrant/.ssh
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0700'

    - name: Add Vagrant's SSH public keys
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', item) }}"
      loop: "{{ lookup('fileglob', ssh_key_pattern, wantlist=True) }}"
  
    - name: Disable SWAP in the system
      ansible.builtin.shell: swapoff -a
      ignore_errors: yes

    - name: Remove SWAP from fstab
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: '^\s*[^#]+\s+none\s+swap\s+'
    
    - name: br_netfilter automated loading
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
    
    - name: Add the br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present
    
    - name: Enable ipv4 forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: yes
    
    - name: Enable net.bridge.bridge-nf-call-iptables
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
        reload: yes
    
    - name: Enable net.bridge.bridge-nf-call-ip6tables
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        state: present
        reload: yes
    
    - name: Render the /etc/hosts file
      ansible.builtin.template:
        src: hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: '0644'
    
    - name: Ensure /etc/apt/keyrings exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    
    - name: Add signing key for Kubernetes
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: present
    
    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: >-
         deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
        filename: kubernetes-community
        state: present
    
    - name: Install required packages
      ansible.builtin.apt:
        name:
          - containerd=1.7.24-0ubuntu1~24.04.2
          - runc=1.1.12-0ubuntu3.1
          - kubeadm=1.32.4-1.1
          - kubelet=1.32.4-1.1
          - kubectl=1.32.4-1.1
        state: present
        update_cache: yes
    
    - name: Configure containerd
      block: 
        - name: Check if containerd config exists # When this file exists, we don't need to overwrite it in the next tasks
          ansible.builtin.stat:
            path: /etc/containerd/config.toml
          register: config_file

        - name: Ensure /etc/containerd directory exists
          ansible.builtin.file:
            path: /etc/containerd
            state: directory
            owner: root
          when: not config_file.stat.exists

        - name: Get containerd config
          ansible.builtin.command: containerd config default
          register: containerd_config
          check_mode: false
          when: not config_file.stat.exists

        - name: Write containerd config to /etc/containerd/config.toml
          ansible.builtin.copy:
            dest: /etc/containerd/config.toml
            content: "{{ containerd_config.stdout }}"
            owner: root
            group: root
            mode: '0644'
          when: not config_file.stat.exists

        - name: Ensure disable_apparmor = true in CRI plugin
          ansible.builtin.lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^(\s*disable_apparmor\s*=\s*)false$' # Now only matches the line with false, could change to be more general
            line: '\1true'
            backrefs: yes

        - name: Update sandbox_image in CRI plugin
          ansible.builtin.lineinfile:
           path: /etc/containerd/config.toml
           regexp: '^(\s*sandbox_image\s*=\s*").*(")$'
           line: '\1registry.k8s.io/pause:3.10\2'
           backrefs: yes

        - name: Set systemd cgroup driver
          ansible.builtin.lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^(\s*SystemdCgroup\s*=\s*)false$' # Now only matches the line with false, could change to be more general
            line: '\1true'
            backrefs: yes

        - name: Restart containerd
          ansible.builtin.service:
            name: containerd
            state: restarted
            enabled: yes
      
    - name: Start and enable Kubelet service
      ansible.builtin.systemd_service:
        name: kubelet
        state: started
        enabled: yes
        daemon_reload: yes
      become: yes
